[{"/Users/kamolesh/Desktop/work/demo-app/src/App.tsx":"1","/Users/kamolesh/Desktop/work/demo-app/src/Pages/Home/Home.tsx":"2","/Users/kamolesh/Desktop/work/demo-app/src/Utils/theme.ts":"3","/Users/kamolesh/Desktop/work/demo-app/src/index.tsx":"4","/Users/kamolesh/Desktop/work/demo-app/src/Pages/Home/Home.css.ts":"5","/Users/kamolesh/Desktop/work/demo-app/src/Utils/globalStyle.css.ts":"6","/Users/kamolesh/Desktop/work/demo-app/src/Utils/helper.ts":"7","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomToggle/index.ts":"8","/Users/kamolesh/Desktop/work/demo-app/src/Components/SidebarLeft/index.ts":"9","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomChart/CustomChart.tsx":"10","/Users/kamolesh/Desktop/work/demo-app/src/Components/TradeCard/TradeCard.tsx":"11","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomButton/index.ts":"12","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomPicker/CustomPicker.tsx":"13","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomButton/CustomButton.tsx":"14","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomToggle/CustomToggle.tsx":"15","/Users/kamolesh/Desktop/work/demo-app/src/Utils/request.ts":"16","/Users/kamolesh/Desktop/work/demo-app/src/Utils/apiCall.ts":"17","/Users/kamolesh/Desktop/work/demo-app/src/Components/Header/index.ts":"18","/Users/kamolesh/Desktop/work/demo-app/src/Components/SidebarLeft/SidebarLeft.tsx":"19"},{"size":531,"mtime":1610301256866,"results":"20","hashOfConfig":"21"},{"size":5173,"mtime":1610306993114,"results":"22","hashOfConfig":"21"},{"size":1072,"mtime":1610225455071,"results":"23","hashOfConfig":"21"},{"size":208,"mtime":1610177462515,"results":"24","hashOfConfig":"21"},{"size":631,"mtime":1610301132704,"results":"25","hashOfConfig":"21"},{"size":660,"mtime":1610307145488,"results":"26","hashOfConfig":"21"},{"size":1499,"mtime":1610300495697,"results":"27","hashOfConfig":"21"},{"size":72,"mtime":1610303139394,"results":"28","hashOfConfig":"21"},{"size":69,"mtime":1610303574472,"results":"29","hashOfConfig":"21"},{"size":5469,"mtime":1610307737984,"results":"30","hashOfConfig":"21"},{"size":5435,"mtime":1610307374930,"results":"31","hashOfConfig":"21"},{"size":72,"mtime":1610302864669,"results":"32","hashOfConfig":"21"},{"size":1457,"mtime":1610303080814,"results":"33","hashOfConfig":"21"},{"size":2278,"mtime":1610303202714,"results":"34","hashOfConfig":"21"},{"size":3741,"mtime":1610303122024,"results":"35","hashOfConfig":"21"},{"size":1170,"mtime":1610302037400,"results":"36","hashOfConfig":"21"},{"size":527,"mtime":1610306998264,"results":"37","hashOfConfig":"21"},{"size":54,"mtime":1610303198282,"results":"38","hashOfConfig":"21"},{"size":5144,"mtime":1610303561052,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18bf1s0",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kamolesh/Desktop/work/demo-app/src/App.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Pages/Home/Home.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Utils/theme.ts",[],["82","83"],"/Users/kamolesh/Desktop/work/demo-app/src/index.tsx",[],["84","85"],"/Users/kamolesh/Desktop/work/demo-app/src/Pages/Home/Home.css.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Utils/globalStyle.css.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Utils/helper.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomToggle/index.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/SidebarLeft/index.ts",[],["86","87"],"/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomChart/CustomChart.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/TradeCard/TradeCard.tsx",["88","89","90"],"import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\n// THEME IMPORT\nimport * as theme from '../../Utils/theme';\n\n// GLOBAL STYLE IMPORT\nimport globalStyles from '../../Utils/globalStyle.css';\n\n// HELPER IMPORT\nimport * as helper from '../../Utils/helper';\n\n// COMPONENTS IMPORT\nimport CustomIcon from './../CustomIcon';\nimport CustomChart from './../CustomChart';\n\n// TS TYPES IMPORT\nimport * as types from '../../Constants/types';\n\n// PROP TYPE DEF\ninterface Props {\n    data: types.TradeCard;\n    assetPrice: {\n        [key: string]: any;\n    } | null;\n}\n\n// COMPONENTS\nconst Separator: React.FC<{}> = (): JSX.Element => {\n    return <div className={css(styles.separator)} />;\n};\n\nconst TradeCard: React.FC<Props> = ({data, assetPrice}): JSX.Element => {\n    // CONSTANTS\n    const outcome_time = helper.formatTimeStamp(data.outcome_time);\n    const total_commitment_funds_float = parseFloat(data.total_commitment_funds);\n    const total_commitment_funds = helper.numberWithCommas(total_commitment_funds_float.toFixed(2));\n\n    return (\n        <div className={css(styles.wrapperContainer, globalStyles.hover)}>\n            <div className={css(globalStyles.rowContainer, globalStyles.alignItemsCenter, styles.container)}>\n                {/* SECTION 1 */}\n                <div className={css(globalStyles.rowContainer, styles.section1Container)}>\n                    <CustomIcon type={'star'} />\n                    <div className={`pl-3 ${css(globalStyles.columnContainer)}`}>\n                        <span className={css(theme.fonts.robotoMed, styles.text1, total_commitment_funds_float == 0 ? globalStyles.opacityHalf : null)}>\n                            {data.name}\n                        </span>\n                        <span className={css(theme.fonts.robotoMed, styles.text2)}>{data.type}</span>\n                    </div>\n                </div>\n                <Separator />\n                {/* SECTION 2 */}\n                <div className={css(styles.section2Container)}>\n                    <div className={css(globalStyles.rowContainer)}>\n                        <CustomIcon type={'leverage'} />\n                        <span className={`pl-3 ${css(theme.fonts.robotoLight, styles.text3)}`}>{data.leverage}x</span>\n                    </div>\n                    <span className={css(theme.fonts.robotoMed, styles.text2)}>\n                        Outcome in {outcome_time.hh ? `${outcome_time.hh}h` : ''} {outcome_time.mm ? `${outcome_time.mm}m` : ''}{' '}\n                        {outcome_time.ss ? `${outcome_time.ss}s` : ''}\n                    </span>\n                </div>\n                {/* SECTION 3 */}\n                <div className={css(styles.section3Container)}>\n                    <CustomChart type={'baseline'} values={assetPrice ? assetPrice['prices'] : null} disabled={total_commitment_funds_float == 0} />\n                </div>\n                {/* SECTION 4 */}\n                <div className={css(globalStyles.columnContainer, styles.section4Container)}>\n                    {data.total_commits > 0 && (\n                        <div className={css(styles.commitsCounter, globalStyles.totalCenter)}>\n                            <span className={css(theme.fonts.robotoMonoMed, styles.text4)}>{data.total_commits}</span>\n                        </div>\n                    )}\n                    <span className={css(theme.fonts.robotoMonoMed, styles.text1, total_commitment_funds_float == 0 ? globalStyles.opacityHalf : null)}>\n                        $ {total_commitment_funds}\n                    </span>\n                    <span className={css(theme.fonts.robotoMed, styles.text2)}>Total commitment funds</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styles = StyleSheet.create({\n    wrapperContainer: {\n        display: 'flex',\n        background: 'linear-gradient(to bottom right, #535763, rgba(80, 83, 95, 0.2), #585C6B)',\n        borderRadius: '0.5rem',\n        marginBottom: '1rem',\n        padding: '0.1rem',\n        position: 'relative',\n    },\n    container: {\n        display: 'flex',\n        flex: 1,\n        backgroundColor: theme.colors.background.card,\n        borderRadius: '0.4rem',\n    },\n    separator: {\n        height: '70%',\n        borderRight: '1px dashed rgba(102, 110, 121, 0.5)',\n    },\n    section1Container: {\n        padding: '1.5rem 1rem',\n        '@media (min-width: 540px)': {\n            width: '250px',\n        },\n        '@media (max-width: 540px)': {\n            width: '0px',\n        },\n    },\n    section2Container: {\n        padding: '1.5rem 1.8rem',\n    },\n    section3Container: {\n        display: 'flex',\n        flex: 0.5,\n        position: 'relative',\n        padding: '30px 0px 10px 0px',\n    },\n    section4Container: {\n        padding: '1.5rem 2rem',\n        flex: 1,\n        alignItems: 'flex-end',\n    },\n    text1: {\n        color: 'white',\n        fontSize: '22px',\n        lineHeight: '26px',\n    },\n    text2: {\n        color: theme.colors.ui.grey,\n        fontSize: '14px',\n    },\n    text3: {\n        color: 'white',\n        fontSize: '16px',\n    },\n    text4: {\n        color: 'white',\n        fontSize: '10px',\n    },\n    commitsCounter: {\n        position: 'absolute',\n        top: 0,\n        height: '20px',\n        width: '25px',\n        borderBottomRightRadius: '2rem',\n        borderBottomLeftRadius: '2rem',\n        backgroundColor: '#1C9DE8',\n    },\n});\n\nexport default TradeCard;\n","/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomButton/index.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomPicker/CustomPicker.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomButton/CustomButton.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/CustomToggle/CustomToggle.tsx",[],"/Users/kamolesh/Desktop/work/demo-app/src/Utils/request.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Utils/apiCall.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/Header/index.ts",[],"/Users/kamolesh/Desktop/work/demo-app/src/Components/SidebarLeft/SidebarLeft.tsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":46,"column":112,"nodeType":"101","messageId":"102","endLine":46,"endColumn":114},{"ruleId":"99","severity":1,"message":"100","line":66,"column":141,"nodeType":"101","messageId":"102","endLine":66,"endColumn":143},{"ruleId":"99","severity":1,"message":"100","line":75,"column":112,"nodeType":"101","messageId":"102","endLine":75,"endColumn":114},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],["103"],["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]